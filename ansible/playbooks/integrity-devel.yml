---

- hosts: srv
  become: yes
  become_method: sudo

  vars:
    bin_dir: "/root/bin" # without trailing slash
    bin_items:
      - integrity
    source_path: "/scratch/integrity/" # with trailing slash
    source_dest: "/usr/local/src/integrity-current/" # with trailing slash
    source_link: "/usr/local/src/integrity"
    source_lock: "/usr/local/src/integrity-current.lock"
    source_lock_set: True

  tasks:
    
    - name: "Install packages FreeBSD"
      pkgng:
        name: "{{ item }}"
      with_items:
        - rsync
      when: ansible_os_family == "FreeBSD"

    - name: "Install packages Linux"
      package:
        name: "{{ item }}"
      with_items:
       - rsync
      when: (ansible_os_family == "Debian") or
            (ansible_os_family == "RedHat")

    - name: "Create {{ source_dest }}"
      file:
        state: directory
        path: "{{ source_dest }}"
#       owner="{{ansible_user}}"
#       group={{ "wheel" if ansible_os_family == "FreeBSD" else "adm" }}
#       mode="0775"

    - name: "Copy current source to {{ source_dest }}"
      synchronize:
        src: "{{ source_path }}"
        dest: "{{ source_dest }}"
        rsync_opts:
          - "--no-motd"
          - "--exclude=.git"
    
    - name: "Create symbolic link to {{ source_dest }}"
      file:
        state: link
        src: "{{ source_dest }}"
        dest: "{{ source_link }}"
        force: yes

    - name: "Lock development version"
      command: "touch {{ source_lock }}"
      args:
        creates: "{{ source_lock }}"
      when: source_lock_set
    
    - name: "Copy scripts to {{ bin_dir }}"
      copy:
        src: "{{ source_link }}/{{ item }}"
        dest: "{{ bin_dir }}/{{ item }}"
        remote_src: yes
        owner: "root"
        group: "{{ (ansible_os_family == 'FreeBSD') | ternary('wheel', 'root') }}"
        mode: "0755"
      loop: "{{bin_items}}"
      when: not ansible_check_mode

    - name: "Use /usr/local/bin/bash in FreeBSD"
      lineinfile:
        dest: "{{ bin_dir }}/{{ item }}"
        regexp: "^#!"
        line: "#!/usr/local/bin/bash"
      loop: "{{ bin_items }}"
      when:
        - ansible_os_family == "FreeBSD"
        - not ansible_check_mode

    - name: "Use /bin/bash in Linux"
      lineinfile:
        dest: "{{ bin_dir }}/{{ item }}"
        regexp: "^#!"
        line: "#!/bin/bash"
      loop: "{{ bin_items }}"
      when:
        - (ansible_os_family == "Debian") or
          (ansible_os_family == "RedHat")
        - not ansible_check_mode

# EOF
...
